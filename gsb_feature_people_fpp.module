<?php
/**
 * @file
 * Code for the GSB Feature Person Display feature.
 */

include_once 'gsb_feature_people_fpp.features.inc';

function gsb_feature_people_fpp_entity_info_alter(&$entity_info) {

  $entity_info['fieldable_panels_pane']['bundles']['people'] = array(
    'label' => t('People'),
    'pane category' => t('GSB panes'),
    'pane top level' => TRUE, // set to true to make this show as a top level icon
    'pane icon' => drupal_get_path('module', 'panopoly_widgets') . '/images/icon_text.png',
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      // Note that this has all _ replaced with - from the bundle name.
      'real path' => 'admin/structure/fieldable-panels-panes/manage/people',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );

}

/**
 * Implements hook_fieldable_panels_pane_view_alter().
 */
function gsb_feature_people_fpp_fieldable_panels_pane_view_alter(&$build, $entity_type) {
  $wrapper = entity_metadata_wrapper($entity_type, $build["#$entity_type"]);
  if ($wrapper->getBundle() != 'people') {
    return;
  }

  // Hide the view that wasn't chosen in the UI.
  $show = $wrapper->field_persons_display_style->value();
  $map = array(
    'person-list-view' => 'people_fpp_view_list',
    'person-grid-view' => 'people_fpp_view_grid',
  );
  foreach ($map as $key => $view) {
    $build[$view]['#access'] = ($key == $show);
  }
}

/**
 * Implements hook_preprocess_HOOK() for fieldable-panels-pane.tpl.php.
 */
function gsb_feature_people_fpp_preprocess_fieldable_panels_pane(&$variables) {
  if ($variables['elements']['#bundle'] != 'people') {
    return;
  }

  // Add classes based on the display style.
  try {
    $wrapper = entity_metadata_wrapper('fieldable_panels_pane', $variables['elements']['#element']);
    $variables['classes_array'][] = $wrapper->field_persons_display_style->value();
  }
  catch (EntityMetadataWrapperException $e) {
    // If the fields are ever missing/renamed, Entity API will throw an
    // exception instead of using watchdog.
    watchdog('gsb_feature_image_cta_fpp', 'In @function on line @line: "@message"', array('@function' => __FUNCTION__, '@line' => __LINE__, '@message' => $e->getMessage()), WATCHDOG_ERROR);
  }
}

/**
 * Implements hook_preprocess_entity().
 *   - Preprocess field_person_description Field Collection used in People FPP.
 */
function gsb_feature_people_fpp_preprocess_entity(&$variables) {
  if ($variables['entity_type'] == 'field_collection_item' && $variables['field_collection_item']->field_name == 'field_person_description') {
    $fc_wrapper = entity_metadata_wrapper('field_collection_item', $variables['field_collection_item']);
    $person_wrapper = entity_metadata_wrapper('node', $variables['field_person_ref'][0]['entity']);
    $person_content = reset($variables['content']['field_person_ref'][0]['node']);

    // Get visibility fields.
    $fpp_wrapper = entity_metadata_wrapper('fieldable_panels_pane', $fc_wrapper->value()->hostEntity());
    $display_fields = $fpp_wrapper->field_person_fields_visibility->value();
    // For each field to display, set a variable to TRUE.
    foreach ($display_fields as $display_field) {
      $variables[_gsb_feature_people_fpp_visibility_var_keys($display_field)] = TRUE;
    }
    // For hidden fields set a variable to FALSE.
    $visibility_field = field_info_field('field_person_fields_visibility');
    $display_defaults = array_fill_keys(array_map(
      '_gsb_feature_people_fpp_visibility_var_keys',
      array_keys($visibility_field['settings']['allowed_values'])
    ), FALSE);
    $variables += $display_defaults;

    // Taken from the entity reference
    $variables['name'] = $person_content['title'];
    $variables['photo'] = $person_content['field_image_single_public'];
    $variables['phone'] = check_plain($person_wrapper->field_phone->value());
    //This is the link to the email form coming from the email field. Not the actual email address.
    $variables['email'] = check_plain($person_wrapper->field_email->value());;

    $variables['rank'] = check_plain($person_wrapper->field_rank->value());
    if ($person_wrapper->field_academic_area_single->value()) {
      $variables['academic_area'] = $person_wrapper->field_academic_area_single->view();
    }

    // Taken from the fpp default values
    $variables['program'] = $variables['content']['field_person_title'];
    $variables['summary'] = $variables['content']['field_body'];
  }
}

/**
 * Helper to convert visibility field keys to template variable names.
 * @param $value
 * @return string
 */
function _gsb_feature_people_fpp_visibility_var_keys($value) {
  return 'use_' . str_replace(' ', '_', $value);
}